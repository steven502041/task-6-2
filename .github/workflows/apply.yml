name: Terraform Apply Workflow

on:
  workflow_dispatch:

jobs:
  configure_aws:
    name: Configure AWS Credentials
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::218138280714:role/GitHub-task-6-2
          role-session-name: task-6-2
          aws-region: ${{ env.AWS_REGION }}
          output-credentials: true

  notify-discord:
    name: Notify Discord
    runs-on: ubuntu-latest
    steps:
      - name: Send workflow URL to Discord
        run: |
          curl -H "Content-Type: application/json" \
          -X POST \
          -d '{"content": "Terraform Apply 準備! 請協助 Approve: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"}' \
          ${{ secrets.DISCORD_WEBHOOK_URL }}

  terraform_plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    needs: [configure_aws, notify-discord]
    permissions:
      pull-requests: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan

  terraform_apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    needs: terraform_plan
    outputs:
      ec2_ip: ${{ steps.ec2_ip.outputs.instance_ip }}
      output1: ${{ steps.ec2_ip.outputs.test }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply
        run: |
          terraform apply -auto-approve

      - name: Save Terraform Output
        id: ec2_ip
        run: |
          instance_ip=$(terraform output -raw INSTANCE_IP)
          echo "instance_ip=$instance_ip" >> "$GITHUB_OUTPUT"

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: terraform_apply
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to EC2
        env:
          PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          HOSTNAME: ${{needs.terraform_apply.outputs.ec2_ip}}
          USER_NAME: ${{secrets.EC2_USER}}
        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 400 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} '
            touch ${{ github.run_id }}
          '
